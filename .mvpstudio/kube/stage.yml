---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stage-ecan-soar-deployment
  namespace: ecan-soar
  labels:
    app: ecan-soar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ecan-soar
  template:
    metadata:
      labels:
        app: ecan-soar
    spec:
      containers:
      - name: web-server
        image: mvpstudio/ecan-soar:d12780b
        resources:
           limits:
              cpu: 0.25
              memory: 250Mi
           requests:
              cpu: 0.25
              memory: 250Mi
        ports:
        - containerPort: 3000
        env: 
        - name: NODE_ENV
          value: production
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ecan-soar-mongo-credentials
              key: password
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: ecan-soar-mongo-credentials
              key: username
        - name: DATABASE_HOST
          value: ecan-soar-mongodb
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1 
---
apiVersion: v1
kind: Service
metadata:
  name: ecan-soar
  namespace: ecan-soar
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind: Mapping
      name: ecan-soar-mapping
      host: soar.stage.apps.mvpstudio.org
      prefix: /
      service: ecan-soar.ecan-soar
spec:
  selector:
     app: ecan-soar
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: ecan-soar-mongodb
  namespace: ecan-soar
  labels:
    app: ecan-soar-mongodb
spec:
  ports:
  - port: 27017
    name: mongodb
  selector:
    app: ecan-soar-mongodb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stage-ecan-soar-mongodb-deploy
  namespace: ecan-soar
spec:
  serviceName: ecan-soar-mongodb
  selector:
    matchLabels:
      app: ecan-soar-mongodb
  replicas: 1
  template:
    metadata:
      labels:
        app: ecan-soar-mongodb
    spec:
      containers:
      - name: mongo
        image: mongo:3.6
        resources:
           limits:
              cpu: 0.5
              memory: 500Mi
           requests:
              cpu: 0.5
              memory: 500Mi
        env:
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ecan-soar-mongo-credentials
              key: password
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: ecan-soar-mongo-credentials
              key: username
        ports:
        - containerPort: 27017
          name: mongo
        volumeMounts:
        - name: mongodata
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongodata
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 30Gi